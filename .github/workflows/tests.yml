name: Run tests
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ develop ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: refitt
          POSTGRES_USER: refitt
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.poetry/bin" >> $GITHUB_PATH

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: poetry

      - name: Configure poetry
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi ${{ secrets.PYPI_TOKEN }}

      - name: Install virtual environment
        run: poetry install

      - name: Run tests
        env:
          REFITT_LOGGING_LEVEL: DEBUG
          REFITT_DATABASE_PROVIDER: postgresql
          REFITT_DATABASE_DATABASE: refitt
          REFITT_DATABASE_HOST: localhost
          REFITT_DATABASE_USER: refitt
          REFITT_DATABASE_PASSWORD: postgres
          REFITT_API_SITE: localhost
          REFITT_API_PORT: 5050
          REFITT_API_ROOTKEY: ${{ secrets.API_ROOTKEY_FAKE }}
        run: |
          poetry run refitt database init --test
          poetry run refitt service api start --workers 1 --port 5050 &
          sleep 5
          poetry run pytest -v

      - name: Publish package to test repository
        run: poetry publish --build -r testpypi
